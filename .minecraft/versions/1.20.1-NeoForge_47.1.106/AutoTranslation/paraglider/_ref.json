{
  "commands.paraglider.get.stamina_vessel.result": "%1$s has %2$s Stamina Vessels.",
  "paragliderSettings.save.unsaved": "Save Settings*",
  "commands.paraglider.set.stamina_vessel.too_high": "%s is too high for Stamina Vessels.",
  "commands.paraglider.give.essence.success": "Gave %2$s Essences to %1$s.",
  "commands.paraglider.give.heart_container.fail": "Failed to give %2$s Heart Containers to %1$s.",
  "paragliderSettings.loading.success": "Loaded!",
  "commands.paraglider.take.heart_container.fail": "Failed to take %2$s Heart Containers from %1$s.",
  "commands.paraglider.bargain.start.no_bargain": "No bargain recipes are available to %s with bargain type %s and position %s",
  "commands.paraglider.take.essence.success": "Took %2$s Essences from %1$s.",
  "commands.paraglider.set.essence.no_change": "%1$s already has %2$s Essences.",
  "commands.paraglider.get.heart_container.result": "%1$s has %2$s Heart Containers.",
  "commands.paraglider.set.heart_container.too_low": "%s is too low for Heart Containers.",
  "commands.paraglider.reload_player_states.success": "Reloaded player states.",
  "paragliderSettings.windParticleFreq": "Wind Particle Frequency: %s",
  "commands.paraglider.set.essence.too_low": "%s is too low for Essences.",
  "paragliderSettings.openFolder.tooltip": "Look for a file named \u0027Â§eparagliderSettings.nbtÂ§r\u0027. You can copy it into other instances, or overwrite current one.\n(After overwriting, make sure to reload the settings.)",
  "commands.paraglider.set.essence.too_high": "%s is too high for Essences.",
  "commands.paraglider.get.essence.result": "%1$s has %2$s Essences.",
  "commands.paraglider.set.essence.success": "Set amount of Essences %1$s has to %2$s.",
  "commands.paraglider.set.heart_container.no_change": "%1$s already has %2$s Heart Containers.",
  "commands.paraglider.set.heart_container.fail": "Failed to change amount of Heart Containers %s has.",
  "commands.paraglider.set.stamina_vessel.success": "Set amount of Stamina Vessels %1$s has to %2$s.",
  "commands.paraglider.bargain.end.already_finished": "The bargain with %s is already finished.",
  "paragliderSettings.loading": "Loading...",
  "commands.paraglider.take.stamina_vessel.success": "Took %2$s Stamina Vessels from %1$s.",
  "commands.paraglider.set.stamina_vessel.fail": "Failed to change amount of Stamina Vessels %s has.",
  "paragliderSettings.loading.failure": "Load Failed.",
  "commands.paraglider.bargain.start.success": "Successfully started bargain %2$s with %1$s.",
  "commands.paraglider.bargain.end.success": "Successfully finished bargain with %s.",
  "commands.paraglider.give.stamina_vessel.fail": "Failed to give %2$s Stamina Vessels to %1$s.",
  "paragliderSettings.windParticleFreq.tooltip": "Adjusts frequency of particle effects generated by updraft wind. (0%% ~ 100%%)",
  "commands.paraglider.set.stamina_vessel.no_change": "%1$s already has %2$s Stamina Vessels.",
  "commands.paraglider.set.essence.fail": "Failed to change amount of Essences %s has.",
  "commands.paraglider.take.stamina_vessel.fail": "Failed to take %2$s Stamina Vessels from %1$s.",
  "commands.paraglider.bargain.end.no_bargain": "No bargain is currently in place with %s.",
  "commands.paraglider.set.heart_container.success": "Set amount of Heart Containers %1$s has to %2$s.",
  "commands.paraglider.give.heart_container.success": "Gave %2$s Heart Containers to %1$s.",
  "commands.paraglider.give.stamina_vessel.success": "Gave %2$s Stamina Vessels to %1$s.",
  "commands.paraglider.give.essence.fail": "Failed to give %2$s Essences to %1$s.",
  "paragliderSettings.openFolder": "Open Settings Folder",
  "commands.paraglider.take.heart_container.success": "Took %2$s Heart Containers from %1$s.",
  "commands.paraglider.take.essence.fail": "Failed to take %2$s Essences from %1$s.",
  "commands.paraglider.bargain.start.invalid_bargain_type": "Invalid bargain type: %s",
  "commands.paraglider.set.heart_container.too_high": "%s is too high for Heart Containers.",
  "commands.paraglider.set.stamina_vessel.too_low": "%s is too low for Stamina Vessels.",
  "paragliderSettings.save": "Save Settings",
  "commands.paraglider.reload_player_states.fail": "Failed to reload player states.",
  "paragliderSettings.reload": "Re-load Settings"
}